<!DOCTYPE html>
<% if (lang == 'en') { %>
<html lang="en">
<% } else { %>
<html lang="ar" dir="rtl" class="rtl">
<% } %>

<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

  <!-- Meta -->
  <meta name="description" content="HRA Awaran SFD Cyberstate">

  <title>HRA Portal</title>

  <!-- vendor css -->
  <link href="theme/lib/font-awesome/css/font-awesome.css" rel="stylesheet">
  <link href="theme/lib/Ionicons/css/ionicons.css" rel="stylesheet">
  <link href="theme/lib/perfect-scrollbar/css/perfect-scrollbar.css" rel="stylesheet">
  <link href="theme/lib/jquery-switchbutton/jquery.switchButton.css" rel="stylesheet">
  <link href="theme/lib/rickshaw/rickshaw.min.css" rel="stylesheet">
  <link href="theme/lib/select2/css/select2.min.css" rel="stylesheet">

  <!-- Bracket CSS -->
  <link rel="stylesheet" href="theme/css/bracket.css">
</head>

<body>

  <% include ../partials/header %>

  <!-- ########## START: MAIN PANEL ########## -->
  <div class="br-mainpanel">
    <div class="br-pagetitle">
      <i class="icon ion-ios-pulse"></i>
      <div>
        <% if (lang == 'en') { %>
        <h4>Construction of 8000 Houses | Disbursment of Funds</h4>
        <p class="mg-b-0" id="labelRegion">As per Bank Reconciliation report till <%= LastDisbursementOn %></p>
        <% } else { %>
        <h3> الشيكات المستنيرة من قبل المستفيدين | بناء 8000 منزل</h3>
        <p class="mg-b-0" id="labelRegion">وفقًا لتقرير تسوية البنك حتى 25 أبريل 2019</p>
        <% } %>
      </div>
    </div><!-- d-flex -->

    <div class="br-pagebody">
      <div class="row row-sm mg-t-20">
        <div class="col-lg-4">
          <div class="card shadow-base card-body pd-25 bd-0">
            <div class="row">
              <div class="col-sm-12">
                <h6 class="card-title tx-uppercase tx-12"> Summary</h6>
                <p class="display-4 tx-medium tx-inverse mg-b-5 tx-lato">
                  <%= (TotalCountInstallment_/TotalCountApproved*100).toFixed(2) %>%
                </p>
                <div class="progress mg-b-10">
                  <div class="progress-bar bg-primary progress-bar-xs wd-75p " role="progressbar" aria-valuenow="1"
                    aria-valuemin="20" aria-valuemax="100"></div>
                </div><!-- progress -->
                <p class="tx-14"><%= TotalCountInstallment_ %> beneficiaries out of <%= TotalCountApproved %> approved beneficiaires have
                  encashed the <%= Installment %> installment cheques
                  of Rs. <%= InstallmentAmount %> as per Bank Reconciliation report till <%= LastDisbursementOn %></p>
                <br />
                <p class="tx-14 lh-3 mg-b-0">You can also see the progress of cheque encashment <a href="#">chart
                    below</a>.</p>
              </div><!-- col-6 -->
            </div><!-- row -->
          </div><!-- card -->
        </div><!-- col-6 -->
        <div class="col-lg-8 mg-t-30 mg-lg-t-0">
          <div class="card shadow-base card-body pd-25 bd-0">
            <div class="row">
              <div class="col-sm-12">
                <h6 class="card-title tx-uppercase tx-12 tx-inverse">Statistics - UC WISE ENCASHMENT</h6>
                <canvas id="PaymentsDisbursedMonthwise" style="width: 100%;height:60%;"></canvas>
              </div><!-- col-6 -->

            </div><!-- row -->
          </div><!-- card -->
        </div><!-- col-6 -->
      </div>


      <div class="row row-sm mg-t-20">
        <div class="col-lg-12">
          <div class="card shadow-base bd-0 pd-10 mg-t-5">

            <div id="PaymentsDisbursedChart" style="width: 100%;height:65vh;"></div>
          </div>
        </div><!-- col-8 -->
      </div><!-- row -->



    </div><!-- br-pagebody -->
    <% include ../partials/footer %>
  </div><!-- br-mainpanel -->
  <!-- ########## END: MAIN PANEL ########## -->

  <script src="theme/lib/jquery/jquery.js"></script>
  <script src="theme/js/popper.js"></script>
  <script src="theme/lib/bootstrap/js/bootstrap.js"></script>
  <script src="theme/lib/perfect-scrollbar/js/perfect-scrollbar.jquery.js"></script>
  <script src="theme/lib/moment/moment.js"></script>
  <script src="theme/lib/jquery-ui/jquery-ui.js"></script>
  <script src="theme/lib/jquery-switchbutton/jquery.switchButton.js"></script>
  <script src="theme/lib/peity/jquery.peity.js"></script>
  <script src="theme/lib/d3/d3.js"></script>
  <script src="theme/lib/rickshaw/rickshaw.min.js"></script>
  <script src="theme/lib/Flot/jquery.flot.js"></script>
  <script src="theme/lib/Flot/jquery.flot.resize.js"></script>
  <script src="theme/lib/flot-spline/jquery.flot.spline.js"></script>
  <script src="theme/lib/jquery.sparkline.bower/jquery.sparkline.min.js"></script>
  <script src="theme/lib/chart.js/Chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/echarts@5.5.1/dist/echarts.min.js"></script>
  <script src="theme/lib/select2/js/select2.full.min.js"></script>
  <script src="http://maps.google.com/maps/api/js?key=AIzaSyDw_FHu8ftIuC-35k9ViKlnp63L2vnGiLU"></script>

  <script src="theme/lib/gmaps/gmaps.js"></script>

  <script src="theme/js/bracket.js"></script>
  <script src="theme/js/map.shiftworker.js"></script>
  <script src="theme/js/ResizeSensor.js"></script>
  <script src="theme/js/dashboard.js"></script>
  
  <script>
function fillMonths(md){
var months =['2019-03','2019-04','2019-05','2019-06','2019-07','2019-08','2019-09','2019-10','2019-11','2019-12','2020-01','2020-02','2020-03','2020-04','2020-05','2020-06','2020-07','2020-08']
var i=0;
var d=[];
months.forEach(m=>{ 
if(md[i] && m==md[i].Month) {
d.push(md[i++]);
} else {
d.push({Month: m,
TotalCountInstallment_Awaran: 0,
TotalCountInstallment_Dandar: 0,
TotalCountInstallment_Gajjar: 0,
TotalCountInstallment_Gishkore: 0,
TotalCountInstallment_Nokjo: 0,
TotalCountInstallment_Parwar: 0,
TotalCountInstallment_Teertaje: 0});
}
 });
return d;
}

    $(function () {
      'use strict'
      // FOR DEMO ONLY
      // menu collapsed by default during first page load or refresh with screen
      // having a size between 992px and 1299px. This is intended on this page only
      // for better viewing of widgets demo.
      $(window).resize(function () {
        minimizeMenu();
      });
      minimizeMenu();
      function minimizeMenu() {
        if (window.matchMedia('(min-width: 992px)').matches && window.matchMedia('(max-width: 1299px)').matches) {
          // show only the icons and hide left menu label by default
          $('.menu-item-label,.menu-item-arrow').addClass('op-lg-0-force d-lg-none');
          $('body').addClass('collapsed-menu');
          $('.show-sub + .br-menu-sub').slideUp();
        } else if (window.matchMedia('(min-width: 1300px)').matches && !$('body').hasClass('collapsed-menu')) {
          $('.menu-item-label,.menu-item-arrow').removeClass('op-lg-0-force d-lg-none');
          $('body').removeClass('collapsed-menu');
          $('.show-sub + .br-menu-sub').slideDown();
        }
      }
    });
  </script>
  <script>
    (function (document, window, $) {
      

      function generateMonthYearSeries(startDate, endDate) {
   
   // Array to hold the month-year strings
   let monthYearStrings = [];
   
   // Validate the dates
   if (isNaN(startDate.getTime()) || isNaN(endDate.getTime())) {
       throw new Error('Invalid date format. Please provide valid dates.');
   }
   
   // Ensure startDate is before endDate
   if (startDate > endDate) {
       throw new Error('The "from" date must be before the "to" date.');
   }
   
   // Function to format date as "Month-Year"
   function formatMonthYear(date) {
       const months = ["JAN", "FEB", "MAR", "APR", "MAY", "JUN",
                        "JUL", "AUG", "SEP", "OCT", "NOV", "DEC"];
       let month = months[date.getMonth()];
       let year = date.getFullYear();
       return `${month}-${year}`;
   }
   
   // Iterate through the months from startDate to endDate
   let currentDate = new Date(startDate.getFullYear(), startDate.getMonth(), 1);
   while (currentDate <= endDate) {
       monthYearStrings.push(formatMonthYear(currentDate));
       // Move to the next month
       currentDate.setMonth(currentDate.getMonth() + 1);
   }
   
   return monthYearStrings;
}
    

      document.getElementById("li-financials").classList.add('active');
      document.getElementById("disbursments").classList.add('active');
      function htmlDecode(input) {
        var e = document.createElement('div');
        e.innerHTML = input;
        return e.childNodes.length === 0 ? "" : e.childNodes[0].nodeValue;
      }
      var lang = JSON.parse(htmlDecode("<%= JSON.stringify(lang) %>"));
      var TotalCountInstallment_ByUC = JSON.parse(htmlDecode("<%= JSON.stringify(TotalCountInstallment_ByUC) %>"));
      var TotalCountInstallment_ByUCnMonth = fillMonths(JSON.parse(htmlDecode("<%= JSON.stringify(TotalCountInstallment_ByUCnMonth) %>")));
      const TotalCountsInstallment_DisbursementByMonth  = JSON.parse(htmlDecode("<%= JSON.stringify(TotalCountsInstallment_DisbursementByMonth) %>"));

      var timeSeries = generateMonthYearSeries(new Date("2019-01-01"),new Date())
      
      const totalDisbursments = TotalCountsInstallment_DisbursementByMonth.reduce((l, c) => {
        if (!l[c.CD]) l[c.CD] = { [c.InstallmentType] : c.count };
        else l[c.CD][c.InstallmentType] = c.count;
        return l;
      }, {})



      const labelOption = {
        show: true,
        formatter: '{c}  {name|{a}}',
        fontSize: 12,
        rich: {
          name: {}
        }
      };
      var LabelMonths = [];
      var ChartData = [];
      const levelValue={[1]:[],[2]:[],[3]:[],[4]:[]};
      timeSeries.forEach(period => {
        let value = totalDisbursments?.[period]?.[1];
        levelValue[1].push(totalDisbursments?.[period]?.[1] ?? 0);
        levelValue[2].push(totalDisbursments?.[period]?.[2] ?? 0);
        levelValue[3].push(totalDisbursments?.[period]?.[3] ?? 0);
        levelValue[4].push(totalDisbursments?.[period]?.[4] ?? 0);
      })
     


      var ctx = document.getElementById('PaymentsDisbursedChart');
     

      const min = timeSeries[timeSeries.length-4];
     const max = timeSeries[timeSeries.length-1];
   
      var p2 = new echarts.init(ctx,null, { renderer: 'canvas' });

      option = {
        tooltip: {
          trigger: 'axis',
          axisPointer: {
            type: 'shadow'
          }
        },

        toolbox: {
          show: true,
          orient: 'vertical',
          left: 'right',
          top: 'center',
          feature: {
            mark: { show: true },
            magicType: { show: true, type: ['line', 'bar', 'stack'] },
            restore: { show: true },
            saveAsImage: { show: true }
          }
        },
          legend: {
            data: ["Level 1","Level 2","Level 3","Level 4"],
            display: true,

          },
          dataZoom: {show: true},
          aria: {
    enabled: true,
    decal: {
      show: true
    }
 },
 grid: {
        left: '3%',
        right: '4%',
        bottom: '3%',
        containLabel: true
    },
    
          xAxis: [
          {
            type: 'category',
            axisTick: { show: true },
            data: timeSeries,
            boundaryGap: true,
            // min,
            // max
          }
        ],
        yAxis: [
          {
            type: 'value',
            position: "right"
          }
        ],
        series: [
          {
            name: 'Level 1',
            type: 'bar',
            barGap: 0,
       //     label: labelOption,
            emphasis: {
              focus: 'series'
            },
            data: levelValue[1]
          },
          {
            name: 'Level 2',
            type: 'bar',
            barGap: 0,
       //     label: labelOption,
            emphasis: {
              focus: 'series'
            },
            data: levelValue[2]
          },
          {
            name: 'Level 3',
            type: 'bar',
            barGap: 0,
       //     label: labelOption,
            emphasis: {
              focus: 'series'
            },
            data: levelValue[3]
          },
          {
            name: 'Level 4',
            type: 'bar',
            barGap: 0,
         //   label: labelOption,
            emphasis: {
              focus: 'series'
            },
            data: levelValue[4]
          }]
         
        }
         
     
   
       p2.setOption(option);

 
    })(document, window, jQuery);
  </script>
</body>

</html>